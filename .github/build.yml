name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install poetry
      run: |
        python -m pip install poetry==1.1.11

    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project true

    - name: Cache the virtualenv
      uses: actions/cache@v2
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: |
        python -m poetry install

    - name: style checks with black
      run: |
        python -m poetry run black --diff --check $(git ls-files '*.py')
    
    - name: run pylint
      run: |
        python -m poetry run pylint --disable=all --enable=unused-import $(git ls-files '*.py')

    - name: Run tests
      run: |
        python -m poetry run python -m pytest -sxv

    - name: Verify that the Docker image for the action builds
      run: docker build . --file Dockerfile

